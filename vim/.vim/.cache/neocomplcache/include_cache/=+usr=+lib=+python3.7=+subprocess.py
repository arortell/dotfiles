[{'word': 'CREATE_NEW_CONSOLE', 'kind': 'i', 'abbr': 'from _winapi import (CREATE_NEW_CONSOLE, CREATE_NEW_PROCESS_GROUP,', 'dup': 1}, {'word': 'CREATE_NEW_PROCESS_GROUP', 'kind': 'i', 'abbr': 'from _winapi import (CREATE_NEW_CONSOLE, CREATE_NEW_PROCESS_GROUP,', 'dup': 1}, {'word': 'CalledProcessError', 'kind': 'c', 'abbr': 'CalledProcessError(SubprocessError): <class>', 'dup': 1}, {'word': 'Close', 'menu': '.Handle', 'kind': 'm', 'abbr': 'def Close(self, CloseHandle=_winapi.CloseHandle):', 'dup': 1}, {'word': 'CompletedProcess', 'kind': 'c', 'abbr': 'CompletedProcess(object): <class>', 'dup': 1}, {'word': 'DEVNULL', 'kind': 'v', 'abbr': 'DEVNULL', 'dup': 1}, {'word': 'Detach', 'menu': '.Handle', 'kind': 'm', 'abbr': 'def Detach(self):', 'dup': 1}, {'word': 'Handle', 'kind': 'c', 'abbr': 'Handle(int): <class>', 'dup': 1}, {'word': 'PIPE', 'kind': 'v', 'abbr': 'PIPE', 'dup': 1}, {'word': 'Popen', 'kind': 'c', 'abbr': 'Popen(object): <class>', 'dup': 1}, {'word': 'STARTUPINFO', 'kind': 'c', 'abbr': 'STARTUPINFO: <class>', 'dup': 1}, {'word': 'STDOUT', 'kind': 'v', 'abbr': 'STDOUT', 'dup': 1}, {'word': 'SubprocessError', 'kind': 'c', 'abbr': 'SubprocessError(Exception): pass <class>', 'dup': 1}, {'word': 'TimeoutExpired', 'kind': 'c', 'abbr': 'TimeoutExpired(SubprocessError): <class>', 'dup': 1}, {'word': '_PIPE_BUF', 'kind': 'v', 'abbr': '_PIPE_BUF', 'dup': 1}, {'word': '_PopenSelector', 'menu': '.STARTUPINFO', 'kind': 'v', 'abbr': '_PopenSelector = selectors.PollSelector', 'dup': 1}, {'word': '__all__', 'kind': 'v', 'abbr': '__all__ = ["Popen", "PIPE", "STDOUT", "call", "check_call", "getstatusoutput",', 'dup': 1}, {'word': '__del__', 'menu': '.Handle', 'kind': 'v', 'abbr': '__del__ = Close', 'dup': 1}, {'word': '__init__', 'menu': '.STARTUPINFO', 'kind': 'm', 'abbr': '__init__', 'dup': 1}, {'word': '__str__', 'menu': '.Handle', 'kind': 'v', 'abbr': '__str__ = __repr__', 'dup': 1}, {'word': '_active', 'kind': 'v', 'abbr': '_active = []', 'dup': 1}, {'word': '_args_from_interpreter_flags', 'kind': 'f', 'abbr': 'def _args_from_interpreter_flags():', 'dup': 1}, {'word': '_check_timeout', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def _check_timeout(self, endtime, orig_timeout):', 'dup': 1}, {'word': '_child_created', 'menu': 'Popen', 'kind': 'v', 'abbr': '_child_created = False # Set here since __del__ checks it', 'dup': 1}, {'word': '_cleanup', 'kind': 'f', 'abbr': 'def _cleanup():', 'dup': 1}, {'word': '_communicate', 'kind': 'f', 'abbr': 'def _communicate(self, input, endtime, orig_timeout):', 'dup': 1}, {'word': '_execute_child', 'kind': 'f', 'abbr': 'def _execute_child(self, args, executable, preexec_fn, close_fds,', 'dup': 1}, {'word': '_filter_handle_list', 'kind': 'f', 'abbr': 'def _filter_handle_list(self, handle_list):', 'dup': 1}, {'word': '_get_devnull', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def _get_devnull(self):', 'dup': 1}, {'word': '_get_handles', 'kind': 'f', 'abbr': 'def _get_handles(self, stdin, stdout, stderr):', 'dup': 1}, {'word': '_handle_exitstatus', 'kind': 'f', 'abbr': 'def _handle_exitstatus(self, sts, _WIFSIGNALED=os.WIFSIGNALED,', 'dup': 1}, {'word': '_internal_poll', 'kind': 'f', 'abbr': 'def _internal_poll(self, _deadstate=None, _waitpid=os.waitpid,', 'dup': 1}, {'word': '_make_inheritable', 'kind': 'f', 'abbr': 'def _make_inheritable(self, handle):', 'dup': 1}, {'word': '_mswindows', 'kind': 'v', 'abbr': '_mswindows', 'dup': 1}, {'word': '_optim_args_from_interpreter_flags', 'kind': 'f', 'abbr': 'def _optim_args_from_interpreter_flags():', 'dup': 1}, {'word': '_posixsubprocess', 'kind': 'i', 'abbr': 'import _posixsubprocess', 'dup': 1}, {'word': '_readerthread', 'kind': 'f', 'abbr': 'def _readerthread(self, fh, buffer):', 'dup': 1}, {'word': '_remaining_time', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def _remaining_time(self, endtime):', 'dup': 1}, {'word': '_save_input', 'kind': 'f', 'abbr': 'def _save_input(self, input):', 'dup': 1}, {'word': '_stdin_write', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def _stdin_write(self, input):', 'dup': 1}, {'word': '_time', 'kind': 'i', 'abbr': 'from time import monotonic as _time', 'dup': 1}, {'word': '_translate_newlines', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def _translate_newlines(self, data, encoding, errors):', 'dup': 1}, {'word': '_try_wait', 'kind': 'f', 'abbr': 'def _try_wait(self, wait_flags):', 'dup': 1}, {'word': '_wait', 'kind': 'f', 'abbr': 'def _wait(self, timeout):', 'dup': 1}, {'word': '_winapi', 'kind': 'i', 'abbr': 'import _winapi', 'dup': 1}, {'word': 'builtins', 'kind': 'i', 'abbr': 'import builtins', 'dup': 1}, {'word': 'call', 'kind': 'f', 'abbr': 'def call(*popenargs, timeout=None, **kwargs):', 'dup': 1}, {'word': 'check_call', 'kind': 'f', 'abbr': 'def check_call(*popenargs, **kwargs):', 'dup': 1}, {'word': 'check_output', 'kind': 'f', 'abbr': 'def check_output(*popenargs, timeout=None, **kwargs):', 'dup': 1}, {'word': 'check_returncode', 'menu': 'CompletedProcess', 'kind': 'm', 'abbr': 'def check_returncode(self):', 'dup': 1}, {'word': 'closed', 'menu': '.Handle', 'kind': 'v', 'abbr': 'closed = False', 'dup': 1}, {'word': 'communicate', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def communicate(self, input=None, timeout=None):', 'dup': 1}, {'word': 'errno', 'kind': 'i', 'abbr': 'import errno', 'dup': 1}, {'word': 'getoutput', 'kind': 'f', 'abbr': 'def getoutput(cmd):', 'dup': 1}, {'word': 'getstatusoutput', 'kind': 'f', 'abbr': 'def getstatusoutput(cmd):', 'dup': 1}, {'word': 'kill', 'kind': 'f', 'abbr': 'def kill(self):', 'dup': 1}, {'word': 'list2cmdline', 'kind': 'f', 'abbr': 'list2cmdline', 'dup': 1}, {'word': 'msvcrt', 'kind': 'i', 'abbr': 'import msvcrt', 'dup': 1}, {'word': 'poll', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def poll(self):', 'dup': 1}, {'word': 'select', 'kind': 'i', 'abbr': 'import select', 'dup': 1}, {'word': 'selectors', 'kind': 'i', 'abbr': 'import selectors', 'dup': 1}, {'word': 'send_signal', 'kind': 'f', 'abbr': 'def send_signal(self, sig):', 'dup': 1}, {'word': 'signal', 'kind': 'i', 'abbr': 'import signal', 'dup': 1}, {'word': 'stdout', 'menu': 'CalledProcessError', 'kind': 'm', 'abbr': 'def stdout(self):', 'dup': 1}, {'word': 'terminate', 'kind': 'f', 'abbr': 'def terminate(self):', 'dup': 1}, {'word': 'threading', 'kind': 'i', 'abbr': 'import threading', 'dup': 1}, {'word': 'time', 'kind': 'i', 'abbr': 'import time', 'dup': 1}, {'word': 'universal_newlines', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def universal_newlines(self):', 'dup': 1}, {'word': 'wait', 'menu': 'Popen', 'kind': 'm', 'abbr': 'def wait(self, timeout=None):', 'dup': 1}, {'word': 'warnings', 'kind': 'i', 'abbr': 'import warnings', 'dup': 1}]
