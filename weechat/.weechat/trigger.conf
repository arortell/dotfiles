#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +nickserv +(id|identify|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "==^(/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:3}}${re:4}"
cmd_pass_register.return_code = ok
conky_tag_color.arguments = "weechat_print"
conky_tag_color.command = "${if:${tg_message}=~Load Average?/buffer set localvar_set_buflist ${tg_message_nocolor}}"
conky_tag_color.conditions = "${tg_buffer} == exec.exec.conky"
conky_tag_color.enabled = on
conky_tag_color.hook = modifier
conky_tag_color.post_action = none
conky_tag_color.regex = "/^ \t(Uptime|CPU|RAM|Swap|Networking|Up|Down):(.*)/ ${color:_31}${re:1}\t${color:reset}${re:2}/ /No swap/0/ /^ \tLoad Average.*// /^Load Average: (.*)/${re:1}/tg_message_nocolor"
conky_tag_color.return_code = ok
devinfo.arguments = "devinfo"
devinfo.command = "/command -buffer ${buffer.full_name} * /say ${out}"
devinfo.conditions = ""
devinfo.enabled = on
devinfo.hook = hsignal
devinfo.post_action = none
devinfo.regex = "/\n/ /out / (stable_number|git|git_scripts|next_stable|next_stable_number):\S+//out /^stable:(\S+)/The stable version of WeeChat is ${re:1}./out / stable_date:(\S+)/ It is the stable version since ${re:1}./out / devel:(\S+)/ The devel version of WeeChat is ${re:1}./out / next_stable_date:(\S+)/ The next stable should be release around ${re:1}./out /([0-9]{4})-01-([0-9]{2})/January ${re:2} ${re:1}/out /([0-9]{4})-02-([0-9]{2})/February ${re:2} ${re:1}/out /([0-9]{4})-03-([0-9]{2})/March ${re:2} ${re:1}/out /([0-9]{4})-04-([0-9]{2})/April ${re:2} ${re:1}/out /([0-9]{4})-05-([0-9]{2})/May ${re:2} ${re:1}/out /([0-9]{4})-06-([0-9]{2})/June ${re:2} ${re:1}/out /([0-9]{4})-07-([0-9]{2})/July ${re:2} ${re:1}/out /([0-9]{4})-08-([0-9]{2})/August ${re:2} ${re:1}/out /([0-9]{4})-09-([0-9]{2})/September ${re:2} ${re:1}/out /([0-9]{4})-10-([0-9]{2})/October ${re:2} ${re:1}/out /([0-9]{4})-11-([0-9]{2})/November ${re:2} ${re:1}/out /([0-9]{4})-12-([0-9]{2})/December ${re:2} ${re:1}/out"
devinfo.return_code = ok
devinfofr.arguments = "devinfofr"
devinfofr.command = "/command -buffer ${buffer.full_name} * /say ${out}"
devinfofr.conditions = ""
devinfofr.enabled = on
devinfofr.hook = hsignal
devinfofr.post_action = none
devinfofr.regex = "/\n/ /out / (stable_number|git|git_scripts|next_stable|next_stable_number):\S+//out /^stable:(\S+)/La version stable de WeeChat est la ${re:1}./out / stable_date:(\S+)/ Elle est la version stable depuis le ${re:1}./out / devel:(\S+)/ La version devel de WeeChat est la ${re:1}./out / next_stable_date:(\S+)/ La prochaine stable devrait arriver aux alentour du ${re:1}./out /([0-9]{4})-01-([0-9]{2})/${re:2} Janvier ${re:1}/out /([0-9]{4})-02-([0-9]{2})/${re:2} Février ${re:1}/out /([0-9]{4})-03-([0-9]{2})/${re:2} Mars ${re:1}/out /([0-9]{4})-04-([0-9]{2})/${re:2} Avril ${re:1}/out /([0-9]{4})-05-([0-9]{2})/${re:2} Mai ${re:1}/out /([0-9]{4})-06-([0-9]{2})/${re:2} Juin ${re:1}/out /([0-9]{4})-07-([0-9]{2})/${re:2} Juillet ${re:1}/out /([0-9]{4})-08-([0-9]{2})/${re:2} Août ${re:1}/out /([0-9]{4})-09-([0-9]{2})/${re:2} Septembre ${re:1}/out /([0-9]{4})-10-([0-9]{2})/${re:2} Octobre ${re:1}/out /([0-9]{4})-11-([0-9]{2})/${re:2} Novembre ${re:1}/out /([0-9]{4})-12-([0-9]{2})/${re:2} Décembre ${re:1}/out"
devinfofr.return_code = ok
hsignal_news_click.arguments = "news_click"
hsignal_news_click.command = "/command -buffer ${buffer.full_name} core /input delete_line;/command -buffer ${buffer.full_name} core /input insert ${_chat_line_tags}"
hsignal_news_click.conditions = ""
hsignal_news_click.enabled = on
hsignal_news_click.hook = hsignal
hsignal_news_click.post_action = none
hsignal_news_click.regex = "/.*,url_([^,]+).*/${re:1}/_chat_line_tags"
hsignal_news_click.return_code = ok
hsignal_znc_commands.arguments = "znc_commands"
hsignal_znc_commands.command = "/command -buffer ${buffer.full_name} * /quote znc help ${_bar_item_line};/command -buffer ${buffer.full_name} * /input delete_line;/command -buffer ${buffer.full_name} * /input insert ${_bar_item_line}\x20"
hsignal_znc_commands.conditions = ""
hsignal_znc_commands.enabled = on
hsignal_znc_commands.hook = hsignal
hsignal_znc_commands.post_action = none
hsignal_znc_commands.regex = "/^0$/Version/_bar_item_line /^1$/ListMods/_bar_item_line /^2$/ListAvailMods/_bar_item_line /^3$/ListNicks/_bar_item_line /^4$/ListServers/_bar_item_line /^5$/AddNetwork/_bar_item_line /^6$/DelNetwork/_bar_item_line /^7$/ListNetworks/_bar_item_line /^8$/MoveNetwork/_bar_item_line /^9$/JumpNetwork/_bar_item_line /^10$/AddServer/_bar_item_line /^11$/DelServer/_bar_item_line /^12$/AddTrustedServerFingerprint/_bar_item_line /^13$/DelTrustedServerFingerprint/_bar_item_line /^14$/ListTrustedServerFingerprints/_bar_item_line /^15$/EnableChan/_bar_item_line /^16$/DisableChan/_bar_item_line /^17$/Attach/_bar_item_line /^18$/Detach/_bar_item_line /^19$/Topics/_bar_item_line /^20$/PlayBuffer/_bar_item_line /^21$/ClearBuffer/_bar_item_line /^22$/ClearAllChannelBuffers/_bar_item_line /^23$/ClearAllQueryBuffers/_bar_item_line /^24$/SetBuffer/_bar_item_line /^25$/AddBindHost/_bar_item_line /^26$/DelBindHost/_bar_item_line /^27$/ListBindHosts/_bar_item_line /^28$/SetBindHost/_bar_item_line /^29$/SetUserBindHost/_bar_item_line /^30$/ClearBindHost/_bar_item_line /^31$/ClearUserBindHost/_bar_item_line /^32$/ShowBindHost/_bar_item_line /^33$/Jump/_bar_item_line /^34$/Disconnect/_bar_item_line /^35$/Connect/_bar_item_line /^36$/Uptime/_bar_item_line /^37$/LoadMod/_bar_item_line /^38$/UnloadMod/_bar_item_line /^39$/ReloadMod/_bar_item_line /^40$/UpdateMod/_bar_item_line /^41$/ShowMOTD/_bar_item_line /^42$/SetMOTD/_bar_item_line /^43$/AddMOTD/_bar_item_line /^44$/ClearMOTD/_bar_item_line /^45$/ListPorts/_bar_item_line /^46$/AddPort/_bar_item_line /^47$/DelPort/_bar_item_line /^48$/Rehash/_bar_item_line /^49$/SaveConfig/_bar_item_line /^50$/ListUsers/_bar_item_line /^51$/ListAllUserNetworks/_bar_item_line /^52$/ListChans/_bar_item_line /^53$/ListClients/_bar_item_line /^54$/Traffic/_bar_item_line /^55$/Broadcast/_bar_item_line /^56$/Shutdown/_bar_item_line /^57$/Restart/_bar_item_line"
hsignal_znc_commands.return_code = ok
modifier_is_nick_valid.arguments = "input_text_display"
modifier_is_nick_valid.command = ""
modifier_is_nick_valid.conditions = "${tg_string_nocolor} =~ ^/nick .+ && ${buffer.plugin.name} == irc"
modifier_is_nick_valid.enabled = on
modifier_is_nick_valid.hook = modifier
modifier_is_nick_valid.post_action = none
modifier_is_nick_valid.regex = "==/nick (.+)==${re:1}==tg_string_nocolor ===/nick (.+)===/nick ${if:${info:irc_is_nick,${tg_string_nocolor}}&&${cut:${info:irc_server_isupport_value,${server},NICKLEN},,${tg_string_nocolor}}==${tg_string_nocolor}?${color:*green}:${color:*red}}${re:1}      -- NICKLEN:${color:-bold} ${info:irc_server_isupport_value,${server},NICKLEN}  ${color:bold}Allowed Chars: ${color:-bold}${esc:a-zA-Z0-9_-\[]{}^`|}===tg_string"
modifier_is_nick_valid.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
news_modifier.arguments = "weechat_print"
news_modifier.command = "/print -buffer ${tg_buffer} -tags ${tg_tags},url_${tg_message_nocolor} \t${tg_prefix}${tg_message}"
news_modifier.conditions = "${tg_tag_nick} == newsly && ${tg_tags} =~ ,irc_privmsg, && ${tg_buffer} == irc.freenode.##news"
news_modifier.enabled = on
news_modifier.hook = modifier
news_modifier.post_action = none
news_modifier.regex = "/.*// /.*/${tg_message_nocolor}/tg_prefix /.*/${tg_message_nocolor}/tg_message /^\[[^]]+\]//tg_message /^\[([^]]+)\].*/${re:1}/tg_prefix /^([^\-]+)/${color:_black,${info:nick_color_name,${re:1}}} ${re:1}/tg_prefix / - / ${color:-underline} /tg_prefix /$/ ${color:!}/tg_prefix ==\(?https?://.*====tg_message ==.*(https?://\S+).*==${re:1}==tg_message_nocolor /\+/%2B/tg_message_nocolor /,/%2C/tg_message_nocolor /\!/%21/tg_message_nocolor /\*/%2A/tg_message_nocolor"
news_modifier.return_code = ok
ptpburl.arguments = "ptpburl"
ptpburl.command = "/command -buffer ${buffer.full_name} core /input delete_line;/command -buffer ${buffer.full_name} core /input insert ${out}"
ptpburl.conditions = ""
ptpburl.enabled = on
ptpburl.hook = hsignal
ptpburl.post_action = none
ptpburl.regex = ""
ptpburl.return_code = ok
send_to_active_grep_log_nick.arguments = "send_to_active_grep_log_nick"
send_to_active_grep_log_nick.command = "/input delete_line;/input insert /exec -sh -norc -pipe "/input insert grep -hiP '^\[\d{2}:\d{2}:\d{2}\] (<|\* )\Q${tg_argv1}\E>? ${tg_argv_eol2} " grep -hiP '^\[\d{2}:\d{2}:\d{2}\] (<|\* )\Q${tg_argv1}\E>? ${tg_argv_eol2}' ~/.znc/users/r3m/moddata/log/`date "+%Y"`/'${server}'/'${buffer.short_name}'.* | shuf -n 1"
send_to_active_grep_log_nick.conditions = "${tg_argv_eol1} && ${type} =~ ^(private|channel)$"
send_to_active_grep_log_nick.enabled = on
send_to_active_grep_log_nick.hook = command
send_to_active_grep_log_nick.post_action = none
send_to_active_grep_log_nick.regex = "/\\\$/\\\\/tg_argv1"
send_to_active_grep_log_nick.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
set_title_weather_buffer.arguments = ""
set_title_weather_buffer.command = "/buffer set title ${tg_message_nocolor};/buffer set localvar_set_buflist ${tg_message}"
set_title_weather_buffer.conditions = "${buffer.full_name} == exec.exec.weather && ${tg_message_nocolor} !~ ^\W && ${tg_message_nocolor} !~ (wttr\.in|@igor_chubin)"
set_title_weather_buffer.enabled = on
set_title_weather_buffer.hook = print
set_title_weather_buffer.post_action = none
set_title_weather_buffer.regex = "/.*/${tg_message_nocolor}/ /[^:]+:(.*)/${re:1}/tg_message"
set_title_weather_buffer.return_code = ok
setdict.arguments = "*,irc_in2_join"
setdict.command = "/set aspell.dict.irc.${server}.${channel} ${tg_signal_data}"
setdict.conditions = "${nick} == ${info:irc_nick,${server}} && ${channel} =~ [.-](fr|it|es)$ && ${aspell.dict.irc.${server}.${channel}} =="
setdict.enabled = on
setdict.hook = signal
setdict.post_action = none
setdict.regex = "/.*[.-](fr|it|es)$/${re:1}/"
setdict.return_code = ok
upgrade_scripts.arguments = "day_changed"
upgrade_scripts.command = "/script update;/wait 10s /script upgrade"
upgrade_scripts.conditions = ""
upgrade_scripts.enabled = on
upgrade_scripts.hook = signal
upgrade_scripts.post_action = none
upgrade_scripts.regex = ""
upgrade_scripts.return_code = ok
weather.arguments = "weather"
weather.command = "/exec -noflush -norc -noln -buffer weather curl -s http://wttr.in/${tg_argv_eol1}?lang=${aspell.dict.exec.exec.weather}"
weather.conditions = ""
weather.enabled = on
weather.hook = command
weather.post_action = none
weather.regex = "/\s/_/tg_argv_eol1"
weather.return_code = ok
weather_shortcut.arguments = "input_text_for_buffer"
weather_shortcut.command = ""
weather_shortcut.conditions = "${buffer[tg_modifier_data].full_name} == exec.exec.weather && ${tg_string_nocolor} !~ ^/"
weather_shortcut.enabled = on
weather_shortcut.hook = modifier
weather_shortcut.post_action = none
weather_shortcut.regex = "==(.*)==/weather ${re:1}"
weather_shortcut.return_code = ok
